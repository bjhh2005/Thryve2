// 定义变量，方便未来统一修改主题
@size: 18px;
@inactive-color: #d1d5db; // 非激活状态的基础色
@active-color: #f44336; // 激活状态的红色 (与节点错误状态匹配)
@active-glow-color: rgba(244, 67, 54, 0.75); // 激活时的辉光颜色

// --- 主样式 ---
.breakpoint-toggle {
    // 1. 尺寸与定位
    position: absolute;
    top:~"calc(-@{size} / 2)"; // 使用 calc 和变量动态计算位置
    left:~"calc(-@{size} / 2)";
    width: @size;
    height: @size;
    z-index: 10; // 确保在节点上层
    cursor: pointer;

    // 2. 基础外观与质感
    border-radius: 50%;
    border: 1px solid darken(@inactive-color, 15%); // 使用 darken 函数让边框颜色更深
    // 使用渐变和内阴影创造立体感
    background: linear-gradient(145deg, lighten(@inactive-color, 10%), @inactive-color);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1),
        inset 0 1px 1px rgba(255, 255, 255, 0.7);

    // 3. 为所有变化的属性添加平滑过渡动画
    // cubic-bezier 提供了一个更有弹性的动画曲线
    transition: all 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);

    // 4. 鼠标悬浮时的交互效果
    &:hover {
        transform: scale(1.15); // 轻微放大
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15),
            inset 0 1px 1px rgba(255, 255, 255, 0.7);
    }

    // 5. 鼠标按下时的交互效果
    &:active {
        transform: scale(0.95); // 轻微缩小，模拟“被按下”
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2); // 内阴影加深
    }

    // 6. 断点激活时的样式 (.active 类)
    &.active {
        // 使用径向渐变，让红色看起来像一个发光体
        background: radial-gradient(circle, lighten(@active-color, 10%), @active-color);
        border-color: darken(@active-color, 15%);

        // 使用多层 box-shadow 创造“辉光”效果
        box-shadow: 0 0 10px @active-glow-color,
            0 0 5px fade(@active-glow-color, 50%),
            inset 0 1px 1px rgba(255, 255, 255, 0.5);

        // 激活状态下悬浮时，辉光更强
        &:hover {
            box-shadow: 0 0 15px @active-glow-color,
                0 0 8px fade(@active-glow-color, 50%),
                inset 0 1px 1px rgba(255, 255, 255, 0.5);
        }
    }
}